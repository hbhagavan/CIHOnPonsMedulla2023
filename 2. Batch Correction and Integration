# title: 2. Batch Correction and Integration
# author: Hemalatha Bhagavan, PhD [Center for Integrative Brain Research, Seattle Childrenâ€™s Research Institute]

# load library
library(SingleCellExperiment)
library(Seurat)
library(dplyr)
library(Seurat)
library(patchwork)
library(tidyverse)
library(Matrix)
library(scales)
library(cowplot)
library(RCurl)
library(ggplot2)
library(sctransform)


#load SCT
norm_seurat <- readRDS("processed_data_DEA/normalized_splitseurat.rds")

# Data normalization, variable feature selection, integration, and filters out doublets

# Normalize and identify variable features for each dataset independently
norm_seurat <- lapply(X = norm_seurat, FUN = function(x) {
   x <- FindVariableFeatures(x, selection.method = "vst", nfeatures = 2000)
})

# Select the most variable features to use for integration
integ_features <- SelectIntegrationFeatures(object.list = norm_seurat, 
                                            nfeatures = 2000) 
# Transform object for integration
# Prepare the SCT list object for integration
norm_seurat <- PrepSCTIntegration(object.list = norm_seurat, 
                                   anchor.features = integ_features)

# Perform CCA, find the best buddies or anchors and filter incorrect anchors.
# Find best buddies - can take a while to run
integ_anchors <- FindIntegrationAnchors(object.list = norm_seurat, 
                                        normalization.method = "SCT", 
                                        anchor.features = integ_features)
# Integrate across sampleid
seurat_integrated <- IntegrateData(anchorset = integ_anchors, 
                                   normalization.method = "SCT")
# Run PCA

DefaultAssay(seurat_integrated) <- "RNA"

seurat_integrated <- subset(seurat_integrated, doublets == "Singlet")

# Run the standard workflow for visualization and clustering
seurat_integrated <- FindVariableFeatures(seurat_integrated, selection.method = "vst", nfeatures = 2000)
seurat_integrated <- ScaleData(seurat_integrated, verbose = FALSE)
seurat_integrated <- RunPCA(seurat_integrated, npcs = 30, verbose = FALSE,features = VariableFeatures(object = seurat_integrated))
ElbowPlot(seurat_integrated)

seurat_integrated <- FindNeighbors(seurat_integrated,  dims = 1:20)
seurat_integrated <- FindClusters(seurat_integrated, resolution =c(0.1,0.4,0.6)) 
seurat_integrated <- RunUMAP(seurat_integrated, reduction = "pca", dims = 1:20)

PCAPlot(seurat_integrated,split.by = "condition")
DimPlot(seurat_integrated, label = TRUE) + NoLegend()
DimPlot(seurat_integrated, split.by = "condition")

# save the data file
